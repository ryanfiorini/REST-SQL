/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

DECLARE @VALIDATORS_TABLE TABLE
(
	SPECIFIC_SCHEMA NVARCHAR(128) NOT NULL,
	SPECIFIC_NAME NVARCHAR(128) NOT NULL,
	PARAMETER_NAME NVARCHAR(128) NOT NULL,
	IS_NULLABLE BIT NULL,
	NUMERIC_MAXIMUM_VALUE BIGINT NULL,
	NUMERIC_MINIMUM_VALUE BIGINT NULL,
	REGULAR_EXPRESSION NVARCHAR(2056) NULL
)

--ADD ANY VALIDATORS HERE
INSERT INTO @VALIDATORS_TABLE (SPECIFIC_SCHEMA, SPECIFIC_NAME, PARAMETER_NAME, NUMERIC_MINIMUM_VALUE, NUMERIC_MAXIMUM_VALUE, REGULAR_EXPRESSION)
VALUES
	('open','POST_PERSON','@EMAIL', NULL, NULL, '^[a-zA-Z0-9.!#$%&''*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$'),
	('open','PUT_PERSON','@EMAIL', NULL, NULL, '^[a-zA-Z0-9.!#$%&''*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$')

MERGE INTO dbo.REST_SQL_VALIDATORS TARGET
USING
	(
		SELECT
			SPECIFIC_SCHEMA, SPECIFIC_NAME, PARAMETER_NAME, NUMERIC_MINIMUM_VALUE, NUMERIC_MAXIMUM_VALUE, REGULAR_EXPRESSION
		FROM
			@VALIDATORS_TABLE
	) AS SOURCE (SPECIFIC_SCHEMA, SPECIFIC_NAME, PARAMETER_NAME, NUMERIC_MINIMUM_VALUE, NUMERIC_MAXIMUM_VALUE, REGULAR_EXPRESSION)
ON
	TARGET.SPECIFIC_SCHEMA = SOURCE.SPECIFIC_SCHEMA AND
	TARGET.SPECIFIC_NAME = SOURCE.SPECIFIC_NAME AND
	TARGET.PARAMETER_NAME = SOURCE.PARAMETER_NAME
WHEN MATCHED THEN UPDATE SET
	TARGET.NUMERIC_MINIMUM_VALUE = SOURCE.NUMERIC_MINIMUM_VALUE,
	TARGET.NUMERIC_MAXIMUM_VALUE = SOURCE.NUMERIC_MAXIMUM_VALUE,
	TARGET.REGULAR_EXPRESSION = SOURCE.REGULAR_EXPRESSION
WHEN NOT MATCHED BY TARGET THEN
	INSERT(SPECIFIC_SCHEMA, SPECIFIC_NAME, PARAMETER_NAME, NUMERIC_MINIMUM_VALUE, NUMERIC_MAXIMUM_VALUE, REGULAR_EXPRESSION)
	VALUES(SPECIFIC_SCHEMA, SPECIFIC_NAME, PARAMETER_NAME, NUMERIC_MINIMUM_VALUE, NUMERIC_MAXIMUM_VALUE, REGULAR_EXPRESSION)
WHEN NOT MATCHED BY SOURCE THEN DELETE;